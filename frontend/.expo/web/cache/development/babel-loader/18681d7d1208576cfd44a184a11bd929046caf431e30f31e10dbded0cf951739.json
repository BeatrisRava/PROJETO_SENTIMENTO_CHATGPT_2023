{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Input, ListItem } from '@rneui/themed';\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    valorInput = _useState2[0],\n    setvalorInput = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    listaValorInput = _useState4[0],\n    setlistaValorInput = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    listaSentimentos = _useState6[0],\n    setlistaSentimentos = _useState6[1];\n  var mostreValorInput = function mostreValorInput(atualizaValorDigitado) {\n    setvalorInput(atualizaValorDigitado);\n  };\n  var manipularValorInput = function manipularValorInput() {\n    if (valorInput.trim() !== '') {\n      setlistaValorInput(function (listaValorInput) {\n        var adicionarValor = [valorInput].concat(_toConsumableArray(listaValorInput));\n        setvalorInput('');\n        return adicionarValor;\n      });\n      obterSentimento(valorInput);\n    }\n  };\n  var removerSentimentoEFrase = function removerSentimentoEFrase(index) {\n    setlistaValorInput(function (listaValorInput) {\n      var auxFrases = _toConsumableArray(listaValorInput);\n      auxFrases.splice(index, 1);\n      return auxFrases;\n    });\n    setlistaSentimentos(function (listaSentimentos) {\n      var auxSentimentos = _toConsumableArray(listaSentimentos);\n      auxSentimentos.splice(index, 1);\n      return auxSentimentos;\n    });\n  };\n  var encontrePalavra = function encontrePalavra(frase) {\n    var sentimento = '';\n    if (frase.includes('Positivo')) {\n      sentimento = 'Positivo';\n    } else if (frase.includes('Negativo')) {\n      sentimento = 'Negativo';\n    } else {\n      sentimento = 'Neutro';\n    }\n    return sentimento;\n  };\n  var obterSentimento = function obterSentimento(texto) {\n    axios.post('http://localhost:4000/sentimentos', {\n      texto: texto\n    }).then(function (response) {\n      var sentimentoDoBackend = response.data.sentimento;\n      setlistaSentimentos(function (listaSentimentos) {\n        return [encontrePalavra(sentimentoDoBackend)].concat(_toConsumableArray(listaSentimentos));\n      });\n    }).catch(function (error) {\n      console.error('Erro na requisição:', error);\n    });\n  };\n  var handleKeyPress = function handleKeyPress(e) {\n    if (e.nativeEvent.key === 'Enter') {\n      manipularValorInput();\n    }\n  };\n  var tresPrimeirosValorInput = listaValorInput.slice(0, 3);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.entradaView,\n      children: [_jsx(Input, {\n        placeholder: \"Digite uma frase\",\n        style: styles.inputStyle,\n        onChangeText: mostreValorInput,\n        value: valorInput,\n        onKeyPress: handleKeyPress\n      }), _jsx(Button, {\n        title: \"Enviar\",\n        color: \"secondary\",\n        style: styles.botaoEnviar,\n        onPress: manipularValorInput\n      })]\n    }), _jsx(View, {\n      style: styles.listaValorInputView,\n      children: tresPrimeirosValorInput.map(function (valorInput, index) {\n        return _jsx(View, {\n          children: _jsx(ListItem, {\n            onLongPress: function onLongPress() {\n              return removerSentimentoEFrase(index);\n            },\n            style: styles.listItem,\n            children: _jsxs(ListItem.Content, {\n              children: [_jsxs(ListItem.Title, {\n                children: [\"Frase: \", valorInput]\n              }), _jsxs(ListItem.Subtitle, {\n                children: [\"Sentimento: \", listaSentimentos[index]]\n              })]\n            })\n          })\n        }, index);\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 40,\n    width: '100%',\n    alignItems: 'center',\n    backgroundImage: 'linear-gradient(to right top, #d16ba5, #c777b9, #ba83ca, #aa8fd8, #9a9ae1, #8aa7ec, #79b3f4, #69bff8, #52cffe, #41dfff, #46eefa, #5ffbf1)'\n  },\n  inputStyle: {\n    borderColor: '#808080',\n    borderWidth: 1,\n    marginBottom: 4,\n    padding: 12,\n    textAlign: 'center',\n    backgroundColor: '#ddd8f9',\n    borderRadius: 8,\n    fontWeight: 'bold'\n  },\n  entradaView: {\n    width: '80%',\n    marginBottom: 4\n  },\n  listItem: {\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 12,\n    backgroundColor: 'white',\n    borderRadius: 8\n  },\n  listaValorInputView: {\n    width: '82%',\n    marginTop: 8,\n    borderRadius: 8,\n    padding: 12\n  },\n  botaoEnviar: {\n    borderColor: 'black',\n    borderWidth: 2,\n    borderRadius: 8,\n    marginLeft: '1%',\n    marginRight: '1%'\n  }\n});","map":{"version":3,"names":["useState","StyleSheet","View","Button","Input","ListItem","axios","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","valorInput","setvalorInput","_useState3","_useState4","listaValorInput","setlistaValorInput","_useState5","_useState6","listaSentimentos","setlistaSentimentos","mostreValorInput","atualizaValorDigitado","manipularValorInput","trim","adicionarValor","concat","_toConsumableArray","obterSentimento","removerSentimentoEFrase","index","auxFrases","splice","auxSentimentos","encontrePalavra","frase","sentimento","includes","texto","post","then","response","sentimentoDoBackend","data","catch","error","console","handleKeyPress","e","nativeEvent","key","tresPrimeirosValorInput","slice","style","styles","container","children","entradaView","placeholder","inputStyle","onChangeText","value","onKeyPress","title","color","botaoEnviar","onPress","listaValorInputView","map","onLongPress","listItem","Content","Title","Subtitle","create","padding","width","alignItems","backgroundImage","borderColor","borderWidth","marginBottom","textAlign","backgroundColor","borderRadius","fontWeight","marginTop","marginLeft","marginRight"],"sources":["C:/Users/kk/Downloads/ProjetoSentimentos_20230528-ProjetoSentimentosEntrega/frontend/App.js"],"sourcesContent":["import { useState } from 'react';\nimport { StyleSheet, View} from 'react-native';\nimport { Button, Input, ListItem } from '@rneui/themed';\nimport axios from 'axios';\n\nexport default function App() {\n  const [valorInput, setvalorInput] = useState('');\n  const [listaValorInput, setlistaValorInput] = useState([]);\n  const [listaSentimentos, setlistaSentimentos] = useState([]);\n\n  const mostreValorInput = (atualizaValorDigitado) => {\n    setvalorInput(atualizaValorDigitado);\n  };\n\n\n  const manipularValorInput = () => {\n    if (valorInput.trim() !== '') { \n      setlistaValorInput((listaValorInput) => {\n        const adicionarValor = [valorInput, ...listaValorInput];\n        setvalorInput(''); \n        return adicionarValor; \n      });\n      obterSentimento(valorInput); \n    }\n  };\n\n\n  const removerSentimentoEFrase = (index) => {\n    setlistaValorInput((listaValorInput) => {\n      const auxFrases = [...listaValorInput];\n      auxFrases.splice(index, 1);\n      return auxFrases;\n    });\n  \n    setlistaSentimentos((listaSentimentos) => {\n      const auxSentimentos = [...listaSentimentos];\n      auxSentimentos.splice(index, 1);\n      return auxSentimentos;\n    });\n  };\n\n\n  const encontrePalavra = (frase) => {\n    let sentimento = '';\n\n    if (frase.includes('Positivo')) {\n      sentimento = 'Positivo';\n    } else if (frase.includes('Negativo')) {\n      sentimento = 'Negativo';\n    } else {\n      sentimento = 'Neutro';\n    }\n    return sentimento;\n  };\n\n  const obterSentimento = (texto) => {\n    axios \n      .post('http://localhost:4000/sentimentos', { texto })\n      .then((response) => {\n        const sentimentoDoBackend = response.data.sentimento;\n        setlistaSentimentos((listaSentimentos) => [encontrePalavra(sentimentoDoBackend), ...listaSentimentos]);\n      })\n      .catch((error) => {\n        console.error('Erro na requisição:', error);\n      });\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.nativeEvent.key === 'Enter') {\n      manipularValorInput();\n    }\n  };\n\n  const tresPrimeirosValorInput = listaValorInput.slice(0, 3);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.entradaView}>\n        <Input\n          placeholder=\"Digite uma frase\"\n          style={styles.inputStyle}\n          onChangeText={mostreValorInput} \n          value={valorInput}\n          onKeyPress={handleKeyPress}/>\n\n        <Button\n          title=\"Enviar\"\n          color=\"secondary\"\n          style={styles.botaoEnviar}\n          onPress={manipularValorInput}\n        ></Button>\n      </View>\n\n      <View style={styles.listaValorInputView}>\n        {tresPrimeirosValorInput.map((valorInput, index) => (\n          <View key={index}>\n            <ListItem\n              onLongPress={() => removerSentimentoEFrase(index)}\n              style={styles.listItem}\n            >\n              <ListItem.Content> \n                <ListItem.Title>Frase: {valorInput}</ListItem.Title>\n                <ListItem.Subtitle>\n                  Sentimento: {listaSentimentos[index]}\n                </ListItem.Subtitle>\n              </ListItem.Content>\n            </ListItem>\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 40,\n    width: '100%',\n    alignItems: 'center',\n    backgroundImage:\n      'linear-gradient(to right top, #d16ba5, #c777b9, #ba83ca, #aa8fd8, #9a9ae1, #8aa7ec, #79b3f4, #69bff8, #52cffe, #41dfff, #46eefa, #5ffbf1)',\n  },\n  inputStyle: {\n    borderColor: '#808080',\n    borderWidth: 1,\n    marginBottom: 4,\n    padding: 12,\n    textAlign: 'center',\n    backgroundColor: '#ddd8f9',\n    borderRadius: 8,\n    fontWeight: 'bold',\n  },\n  entradaView: {\n    width: '80%',\n    marginBottom: 4,\n  },\n  listItem: {\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 12,\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  listaValorInputView: {\n    width: '82%',\n    marginTop: 8,\n    borderRadius: 8,\n    padding: 12,\n  },\n  botaoEnviar: {\n    borderColor: 'black',\n    borderWidth: 2,\n    borderRadius: 8,\n    marginLeft: '1%',\n    marginRight: '1%'\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}