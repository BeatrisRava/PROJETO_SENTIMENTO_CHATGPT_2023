{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Input, ListItem } from '@rneui/themed';\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    valorInput = _useState2[0],\n    setvalorInput = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    listaValorInputESentimentos = _useState4[0],\n    setlistaValorInputESentimentos = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    listaSentimentos = _useState6[0],\n    setlistaSentimentos = _useState6[1];\n  var mostreValorInput = function mostreValorInput(atualizaValorDigitado) {\n    setvalorInput(atualizaValorDigitado);\n  };\n  var manipularValorInput = function manipularValorInput() {\n    if (valorInput.trim() !== '') {\n      setlistaValorInputESentimentos(function (listaValorInputESentimentos) {\n        var aux = [valorInput].concat(_toConsumableArray(listaValorInputESentimentos));\n        setvalorInput('');\n        return aux;\n      });\n      obterSentimento(valorInput);\n    }\n  };\n  var removerSentimentoEFrase = function removerSentimentoEFrase(index) {\n    setlistaValorInputESentimentos(function (listaValorInputESentimentos) {\n      var auxFrases = _toConsumableArray(listaValorInputESentimentos);\n      auxFrases.splice(index, 1);\n      return auxFrases;\n    });\n    setlistaSentimentos(function (listaSentimentos) {\n      var auxSentimentos = _toConsumableArray(listaSentimentos);\n      auxSentimentos.splice(index, 1);\n      return auxSentimentos;\n    });\n  };\n  var encontrePalavra = function encontrePalavra(frase) {\n    var sentimento = '';\n    if (frase.includes('Positivo')) {\n      sentimento = 'Positivo';\n    } else if (frase.includes('Negativo')) {\n      sentimento = 'Negativo';\n    } else {\n      sentimento = 'Neutro';\n    }\n    return sentimento;\n  };\n  var obterSentimento = function obterSentimento(texto) {\n    axios.post('http://localhost:4000/sentimentos', {\n      texto: texto\n    }).then(function (response) {\n      var sentimentoDoBackend = response.data.sentimento;\n      setlistaSentimentos(function (listaSentimentos) {\n        return [encontrePalavra(sentimentoDoBackend)].concat(_toConsumableArray(listaSentimentos));\n      });\n    }).catch(function (error) {\n      console.error('Erro na requisição:', error);\n    });\n  };\n  var ValoresInputESentimentosExibidos = listaValorInputESentimentos.slice(0, 3);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.entradaView,\n      children: [_jsx(Input, {\n        placeholder: \"Digite uma frase\",\n        style: styles.inputStyle,\n        onChangeText: mostreValorInput,\n        value: valorInput\n      }), _jsx(Button, {\n        title: \"Enviar\",\n        color: \"secondary\",\n        style: styles.botaoEnviar,\n        onPress: manipularValorInput\n      })]\n    }), _jsx(View, {\n      style: styles.listaValorInputESentimentosView,\n      children: ValoresInputESentimentosExibidos.map(function (valorInput, index) {\n        return _jsxs(View, {\n          children: [_jsx(ListItem, {\n            onLongPress: function onLongPress() {\n              return removerSentimentoEFrase(index);\n            },\n            style: styles.listItem,\n            children: _jsxs(ListItem.Content, {\n              children: [_jsxs(ListItem.Title, {\n                children: [\"Frase: \", valorInput]\n              }), _jsxs(ListItem.Subtitle, {\n                children: [\"Sentimento: \", listaSentimentos[index]]\n              })]\n            })\n          }), index !== ValoresInputESentimentosExibidos.length - 1 && _jsx(View, {\n            style: styles.divisao\n          })]\n        }, index);\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 40,\n    width: '100%',\n    alignItems: 'center',\n    backgroundImage: 'linear-gradient(to right top, #d16ba5, #c777b9, #ba83ca, #aa8fd8, #9a9ae1, #8aa7ec, #79b3f4, #69bff8, #52cffe, #41dfff, #46eefa, #5ffbf1)'\n  },\n  inputStyle: {\n    borderColor: '#808080',\n    borderWidth: 1,\n    marginBottom: 4,\n    padding: 12,\n    textAlign: 'center',\n    backgroundColor: '#ddd8f9',\n    borderRadius: 8,\n    fontWeight: 'bold'\n  },\n  entradaView: {\n    width: '80%',\n    marginBottom: 4\n  },\n  listItem: {\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 12,\n    backgroundColor: 'white',\n    borderRadius: 8\n  },\n  listaValorInputESentimentosView: {\n    width: '82%',\n    marginTop: 8,\n    borderRadius: 8,\n    padding: 12\n  },\n  divisao: {\n    borderBottomColor: 'gray',\n    borderBottomWidth: 1,\n    marginVertical: 8\n  },\n  botaoEnviar: {\n    borderColor: 'black',\n    borderWidth: 2,\n    borderRadius: 8,\n    marginLeft: '1%',\n    marginRight: '1%'\n  }\n});","map":{"version":3,"names":["useState","StyleSheet","View","Button","Input","ListItem","axios","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","valorInput","setvalorInput","_useState3","_useState4","listaValorInputESentimentos","setlistaValorInputESentimentos","_useState5","_useState6","listaSentimentos","setlistaSentimentos","mostreValorInput","atualizaValorDigitado","manipularValorInput","trim","aux","concat","_toConsumableArray","obterSentimento","removerSentimentoEFrase","index","auxFrases","splice","auxSentimentos","encontrePalavra","frase","sentimento","includes","texto","post","then","response","sentimentoDoBackend","data","catch","error","console","ValoresInputESentimentosExibidos","slice","style","styles","container","children","entradaView","placeholder","inputStyle","onChangeText","value","title","color","botaoEnviar","onPress","listaValorInputESentimentosView","map","onLongPress","listItem","Content","Title","Subtitle","length","divisao","create","padding","width","alignItems","backgroundImage","borderColor","borderWidth","marginBottom","textAlign","backgroundColor","borderRadius","fontWeight","marginTop","borderBottomColor","borderBottomWidth","marginVertical","marginLeft","marginRight"],"sources":["C:/Users/kk/Downloads/ProjetoSentimentos_20230528-ProjetoSentimentosEntrega/frontend/App.js"],"sourcesContent":["\nimport { useState } from 'react';\nimport { StyleSheet, View} from 'react-native';\nimport { Button, Input, ListItem } from '@rneui/themed';\nimport axios from 'axios';\n\nexport default function App() {\n\n  const [valorInput, setvalorInput] = useState('');\n  const [listaValorInputESentimentos, setlistaValorInputESentimentos] = useState([]);\n  const [listaSentimentos, setlistaSentimentos] = useState([]);\n\n  \n  const mostreValorInput = (atualizaValorDigitado) => {\n    setvalorInput(atualizaValorDigitado);\n  };\n\n  \n  const manipularValorInput = () => {\n    if (valorInput.trim() !== '') {\n      setlistaValorInputESentimentos((listaValorInputESentimentos) => {\n        const aux = [valorInput, ...listaValorInputESentimentos];\n        setvalorInput('');\n        return aux;\n      });\n      \n      obterSentimento(valorInput); \n    }\n  };\n\n\n  const removerSentimentoEFrase = (index) => {\n    setlistaValorInputESentimentos((listaValorInputESentimentos) => {\n      const auxFrases = [...listaValorInputESentimentos];\n      auxFrases.splice(index, 1);\n      return auxFrases;\n    });\n  \n    setlistaSentimentos((listaSentimentos) => {\n      const auxSentimentos = [...listaSentimentos];\n      auxSentimentos.splice(index, 1);\n      return auxSentimentos;\n    });\n  };\n\n  \n  const encontrePalavra = (frase) => {\n    let sentimento = '';\n\n    if (frase.includes('Positivo')) {\n      sentimento = 'Positivo';\n    } else if (frase.includes('Negativo')) {\n      sentimento = 'Negativo';\n    } else {\n      sentimento = 'Neutro';\n    }\n    return sentimento;\n  };\n\n  const obterSentimento = (texto) => {\n    axios \n      .post('http://localhost:4000/sentimentos', { texto })\n      .then((response) => {\n        \n        const sentimentoDoBackend = response.data.sentimento;\n        \n        setlistaSentimentos((listaSentimentos) => [encontrePalavra(sentimentoDoBackend), ...listaSentimentos]);\n      })\n      .catch((error) => {\n        console.error('Erro na requisição:', error);\n      });\n  };\n\n\n  \n  const ValoresInputESentimentosExibidos = listaValorInputESentimentos.slice(0, 3);\n\n  \n  return (\n    <View style={styles.container}>\n      <View style={styles.entradaView}>\n        <Input\n          placeholder=\"Digite uma frase\"\n          style={styles.inputStyle}\n          onChangeText={mostreValorInput} \n          value={valorInput}\n        />\n\n        <Button\n          title=\"Enviar\"\n          color=\"secondary\"\n          style={styles.botaoEnviar}\n          onPress={manipularValorInput}\n        ></Button>\n      </View>\n\n      <View style={styles.listaValorInputESentimentosView}>\n        {ValoresInputESentimentosExibidos.map((valorInput, index) => (\n          <View key={index}>\n            <ListItem\n              \n              onLongPress={() => removerSentimentoEFrase(index)}\n              style={styles.listItem}\n            >\n              <ListItem.Content>\n                <ListItem.Title>Frase: {valorInput}</ListItem.Title>\n                <ListItem.Subtitle>\n                  Sentimento: {listaSentimentos[index]}\n                </ListItem.Subtitle>\n              </ListItem.Content>\n            </ListItem>\n            {index !== ValoresInputESentimentosExibidos.length - 1 && (\n              <View style={styles.divisao} />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 40,\n    width: '100%',\n    alignItems: 'center',\n    backgroundImage:\n      'linear-gradient(to right top, #d16ba5, #c777b9, #ba83ca, #aa8fd8, #9a9ae1, #8aa7ec, #79b3f4, #69bff8, #52cffe, #41dfff, #46eefa, #5ffbf1)',\n  },\n  inputStyle: {\n    borderColor: '#808080',\n    borderWidth: 1,\n    marginBottom: 4,\n    padding: 12,\n    textAlign: 'center',\n    backgroundColor: '#ddd8f9',\n    borderRadius: 8,\n    fontWeight: 'bold'\n  },\n  entradaView: {\n    width: '80%',\n    marginBottom: 4,\n  },\n  listItem: {\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 12,\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  listaValorInputESentimentosView: {\n    width: '82%',\n    marginTop: 8,\n    borderRadius: 8,\n    padding: 12,\n  },\n  divisao: {\n    borderBottomColor: 'gray',\n    borderBottomWidth: 1,\n    marginVertical: 8,\n  },\n  botaoEnviar: {\n    borderColor: 'black',\n    borderWidth: 2,\n    borderRadius: 8,\n    marginLeft: '1%',\n    marginRight: '1%'\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}